{"version":3,"sources":["components/ColorPicker/ColorData.js","components/ColorPicker/ColorPicker.js","components/EmojiPicker/Emojis.js","components/EmojiPicker/EmojiPicker.js","components/Tracks/Tracks.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ColorData","color","bpm","ColorPicker","props","handleClick","e","colorChoice","target","className","colorSquares","map","onClick","Emojis","emoji","genre","EmojiPicker","emojiChoice","emojiMap","Tracks","trackMap","tracks","track","href","external_urls","spotify","src","album","images","url","alt","artists","name","id","Header","App","require","config","clientId","useState","token","setToken","setTracks","setColor","setEmoji","tempo","getAuth","a","axios","get","then","res","console","log","getToken","headers","Accept","auth","username","password","data","grant_type","post","qs","stringify","response","access_token","useEffect","trackResponse","catch","error","colorPick","emojiPick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWACaA,G,MAAY,CACrB,CACIC,MAAO,MACPC,IAAK,IAET,CACID,MAAO,SACPC,IAAK,IAET,CACID,MAAO,SACPC,IAAK,KAET,CACID,MAAO,eACPC,IAAK,KAET,CACID,MAAO,QACPC,IAAK,KAET,CACID,MAAO,OACPC,IAAK,KAET,CACID,MAAO,OACPC,IAAK,KAET,CACID,MAAO,SACPC,IAAK,KAET,CACID,MAAO,SACPC,IAAK,O,OCPEC,EAvBK,SAACC,GAEjB,IAAMC,EAAc,SAAAC,GAChBF,EAAMG,YAAYD,EAAEE,OAAOC,YAGzBC,EAAeV,EAAUW,KAAK,SAAAV,GACjC,OAAO,qBAAqBQ,UAAWR,EAAMC,IAAKU,QAASP,EAApD,SACE,4BAAIJ,EAAMA,SADFA,EAAMC,QAM1B,OACI,sBAAKO,UAAU,eAAf,UACI,gDACA,qBAAKA,UAAU,aAAf,SACKC,QCvBJG,G,MAAS,CAClB,CACIC,MAAO,eACPC,MAAO,YAEX,CACID,MAAO,iCACPC,MAAO,YAEX,CACID,MAAO,eACPC,MAAO,eAEX,CACID,MAAO,eACPC,MAAO,WAEX,CACID,MAAO,eACPC,MAAO,SAEX,CACID,MAAO,eACPC,MAAO,aAEX,CACID,MAAM,eACTC,MAAM,SAEP,CACID,MAAM,qBACNC,MAAM,aAEV,CACID,MAAM,eACNC,MAAM,YAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,aAEV,CACID,MAAM,eACNC,MAAM,QAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAM,WAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,eAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,iBAEV,CACID,MAAM,eACNC,MAAO,OAEX,CACID,MAAM,eACNC,MAAM,OAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAO,UAEX,CACID,MAAM,eACNC,MAAM,QAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,qBACNC,MAAM,eAEV,CACID,MAAM,eACNC,MAAM,WAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,cAEV,CACID,MAAM,SACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,QAEV,CACID,MAAM,2BACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACTC,MAAM,WAEP,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAO,SAEX,CACID,MAAM,eACNC,MAAM,OAEV,CACID,MAAM,eACNC,MAAO,cAEX,CACID,MAAM,eACNC,MAAM,QAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,SACNC,MAAM,aAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAO,aAEX,CACID,MAAM,eACNC,MAAM,aAEV,CACID,MAAM,SACNC,MAAM,QAEV,CACID,MAAM,eACNC,MAAM,WAEV,CACID,MAAM,eACNC,MAAO,OAEX,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,cAEV,CACID,MAAM,eACNC,MAAM,QAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,qBACNC,MAAM,aAEV,CACID,MAAM,eACNC,MAAM,SAEV,CACID,MAAM,eACNC,MAAM,UAEV,CACID,MAAM,eACNC,MAAM,YAEV,CACID,MAAM,eACNC,MAAM,iBCnNCC,EAtBK,SAACZ,GAEjB,IAAMC,EAAc,SAAAC,GAChBF,EAAMa,YAAYX,EAAEE,OAAOC,YAGzBS,EAAWL,EAAOF,KAAI,SAAAG,GACxB,OAAO,qBAAKL,UAAU,QAAf,SACI,mBAAGA,UAAWK,EAAMC,MAAOH,QAASP,EAApC,SAAkDS,EAAMA,SADhCA,EAAMA,UAK7C,OACI,sBAAKL,UAAU,eAAf,UACI,iDACA,qBAAKA,UAAU,aAAf,SACKS,QCWFC,G,MA9BA,SAACf,GAEZ,IAAMgB,EAAWhB,EAAMiB,OAAOV,KAAI,SAAAW,GAC9B,OAAO,sBAAoBb,UAAU,QAA9B,UACP,qBAAKA,UAAU,gBAAf,SACA,mBAAGc,KAAMD,EAAME,cAAcC,QAA7B,SAAsC,qBAAKC,IAAKJ,EAAMK,MAAMC,OAAO,GAAGC,IAAKC,IAAI,cAE/E,sBAAKrB,UAAU,mBAAf,UACI,uCACA,sCACA,yCAEJ,sBAAKA,UAAU,aAAf,UACI,4BAAG,4BAAIa,EAAMS,QAAQ,GAAGC,SACxB,4BAAG,mBAAGT,KAAMD,EAAME,cAAcC,QAA7B,SAAuCH,EAAMU,SAChD,4BAAIV,EAAMK,MAAMK,YAZHV,EAAMW,OAiB3B,OACI,sBAAKxB,UAAU,SAAf,UACI,4CACA,qBAAKA,UAAU,aAAf,SACKW,SCdFc,G,MATO,WAClB,OACI,mCACI,qBAAKR,IAAI,iHAAiHI,IAAI,mBAC9H,gDC2GGK,MAvGf,WACCC,EAAQ,IAAUC,SAGlB,IAAMC,EAAW,mCAJH,EAQYC,mBAAS,IARrB,mBAQPC,EARO,KAQAC,EARA,OAScF,mBAAS,IATvB,mBASPlB,EATO,KASCqB,EATD,OAYYH,mBAAS,IAZrB,mBAYPtC,EAZO,KAYA0C,EAZA,OAeYJ,mBAAS,IAfrB,mBAePzB,EAfO,KAeA8B,EAfA,KAkBR7B,EAAQD,EACR+B,EAAQ5C,EAER6C,EAAO,uCAAG,sBAAAC,EAAA,sDACfC,IAAMC,IAAN,2DAA8DX,EAA9D,+EAAoJY,MAAK,SAAAC,GACxJC,QAAQC,IAAIF,MAFE,2CAAH,qDAMPG,EAAQ,uCAAG,gCAAAP,EAAA,6DAEVQ,EAAU,CACdA,QAAS,CACVC,OAAQ,mBACR,eAAgB,qCAEfC,KAAM,CACPC,SAAUpB,EACVqB,SA/BmB,qCAmCdC,EAAO,CACXC,WAAY,sBAdE,kBAkBSb,IAAMc,KAC9B,yCACAC,IAAGC,UAAUJ,GACbL,GArBe,cAkBRU,EAlBQ,OAuBdb,QAAQC,IAAIY,EAASL,KAAKM,cAC1BzB,EAASwB,EAASL,KAAKM,cAxBT,kBAyBPD,EAASL,KAAKM,cAzBP,kCA2Bdd,QAAQC,IAAR,MA3Bc,0DAAH,qDA+Db,OAhCDc,qBAAU,WAEPrB,IACAQ,IAGAN,IAAMC,IAAN,wHAA2HlC,EAA3H,yDAAiL8B,GAAQ,CACxL,OAAU,MACV,QAAW,CACV,OAAU,mBACV,eAAgB,mBAChB,cAAiB,UAAYL,KAE5BU,MAAK,SAAAkB,GACPhB,QAAQC,IAAIe,EAAcR,KAAKvC,QAC/BqB,EAAU0B,EAAcR,KAAKvC,WAC3BgD,OAAM,SAAAC,GACRlB,QAAQC,IAAIiB,QAKb,CAACxD,IAWD,sBAAKL,UAAU,MAAf,UACD,cAAC,EAAD,IACG,cAAC,EAAD,CAAaR,MAAOA,EAAOM,YAXX,SAAAgE,GACrB5B,EAAS4B,MAWJ,cAAC,EAAD,CAAazD,MAAOA,EAAOG,YARX,SAAAuD,GACrB5B,EAAS4B,MAQN1D,EACA,cAAC,EAAD,CAAQO,OAAQA,IAChB,SCjGWoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.545e29e5.chunk.js","sourcesContent":["// 9 key/value pairs for colors and corresponding tempo\nexport const ColorData = [\n    {\n        color: 'red',\n        bpm: 70\n    },\n    {\n        color: 'orange',\n        bpm: 95\n    },\n    {\n        color: 'yellow',\n        bpm: 120\n    },\n    {\n        color: 'yellow-green',\n        bpm: 135\n    },\n    {\n        color: 'green',\n        bpm: 155\n    },\n    {\n        color: 'teal',\n        bpm: 165\n    },\n    {\n        color: 'blue',\n        bpm: 180\n    },\n    {\n        color: 'indigo',\n        bpm: 200\n    },\n    {\n        color: 'violet',\n        bpm: 220\n    }\n];","import React from 'react';\n\nimport './ColorPicker.css';\n\nimport { ColorData } from './ColorData';\n\nconst ColorPicker = (props) => {\n    \n    const handleClick = e => {\n        props.colorChoice(e.target.className)\n    }\n\n    const colorSquares = ColorData.map( color => {\n       return <div key={color.bpm} className={color.bpm} onClick={handleClick}>\n                <p>{color.color}</p>\n            </div>\n        }\n    )\n\n    return(\n        <div className=\"color-picker\">\n            <h3>select a color</h3>\n            <div className=\"color-area\">\n                {colorSquares}\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","export const Emojis = [\n    {\n        emoji: '🪘',\n        genre: \"afrobeat\"\n    },\n    {\n        emoji: '👩‍🎤',\n        genre: \"alt-rock\"\n    },\n    {\n        emoji: '🎸',\n        genre: \"alternative\"\n    },\n    {\n        emoji: '🌊',\n        genre: \"ambient\"\n    },\n    {\n        emoji: '🍣',\n        genre: \"anime\"\n    },\n    {\n        emoji: '🌾',\n        genre: \"bluegrass\"\n    },\n    {\n        emoji:'🫐',\n    \tgenre:\"blues\"\n    },\n    {\n        emoji:'🕶️',\n        genre:\"bossanova\"\n    },\n    {\n        emoji:'👶',\t\n        genre:\"children\"\n    },\n    {\n        emoji:'🧊',\t\n        genre:\"chill\"\n    },\n    {\n        emoji:'🎻',\n        genre:\"classical\"\n    },\n    {\n        emoji:'🎉',\t\n        genre:\"club\"\n    },\n    {\n        emoji:'😂',\n        genre:\"comedy\"\n    },\n    {\n        emoji:'🤠',\t\n        genre:\"country\"\n    },\n    {\n        emoji:'👯',\n        genre:\"dance\"\n    },\n    {\n        emoji:'💀',\n        genre:\"death-metal\"\n    },\n    {\n        emoji:'🕺',\n        genre:\"disco\"\n    },\n    {\n        emoji:'👾',\n        genre:\"drum-and-bass\"\n    },\n    {\n        emoji:'🔌',\n        genre:\t\"edm\"\n    },\n    {\n        emoji:'😈',\n        genre:\"emo\"\n    },\n    {\n        emoji:'🚙',\n        genre:\"garage\"\n    },\n    {\n        emoji:'👼',\t\n        genre: \"gospel\"\n    },\n    {\n        emoji:'🥀',\n        genre:\"goth\"\n    },\n    {\n        emoji:'🪰',\n        genre:\"grunge\"\n    },\n    {\n        emoji:'🙂',\n        genre:\"happy\"\n    },\n    {\n        emoji:'🏔️',\t\n        genre:\"heavy-metal\"\n    },\n    {\n        emoji:'💲',\t\n        genre:\"hip-hop\"\n    },\n    {\n        emoji:'🏠',\n        genre:\"house\"\n    },\n    {\n        emoji:'🤓',\n        genre:\"indie\"\n    },\n    {\n        emoji:'🏭',\n        genre:\"industrial\"\n    },\n    {\n        emoji:'✨',\n        genre:\"j-pop\"\n    },\n    {\n        emoji:'🎷',\t\n        genre:\"jazz\"\n    },\n    {\n        emoji:'🇰🇷',\t\n        genre:\"k-pop\"\n    },\n    {\n        emoji:'🦩',\t\n        genre:\"latino\"\n    },\n    {\n        emoji:'⚙️',\t\n        genre:\"metal\"\n    },\n    {\n        emoji:'🪶',\n    \tgenre:\"new-age\"\n    },\n    {\n        emoji:'🥳',\n        genre:\"party\"\n    },\n    {\n        emoji:'🎹',\n        genre:\t\"piano\"\n    },\n    {\n        emoji:'🎤',\n        genre:\"pop\"\n    },\n    {\n        emoji:'🍄',\n        genre:\t\"psych-rock\"\n    },\n    {\n        emoji:'🤬',\t\n        genre:\"punk\"\n    },\n    {\n        emoji:'💅',\t\n        genre:\"r-n-b\"\n    },\n    {\n        emoji:'☔',\n        genre:\"rainy-day\"\n    },\n    {\n        emoji:'💨',\n        genre:\"reggae\"\n    },\n    {\n        emoji:'‼️',\n        genre:\t\"reggaeton\"\n    },\n    {\n        emoji:'🚗',\t\n        genre:\"road-trip\"\n    },\n    {\n        emoji:'⚡',\t\n        genre:\"rock\"\n    },\n    {\n        emoji:'💕',\t\n        genre:\"romance\"\n    },\n    {\n        emoji:'😥',\n        genre:\t\"sad\"\n    },\n    {\n        emoji:'💃',\t\n        genre:\"salsa\"\n    },\n    {\n        emoji:'😴',\t\n        genre:\"sleep\"\n    },\n    {\n        emoji:'🎶',\t\n        genre:\"songwriter\"\n    },\n    {\n        emoji:'🔔',\t\n        genre:\"soul\"\n    },\n    {\n        emoji:'📚',\t\n        genre:\"study\"\n    },\n    {\n        emoji:'🌞',\t\n        genre:\"summer\"\n    },\n    {\n        emoji:'🕴️',\t\n        genre:\"synth-pop\"\n    },\n    {\n        emoji:'🔥',\t\n        genre:\"tango\"\n    },\n    {\n        emoji:'🤖',\n        genre:\"techno\"\n    },\n    {\n        emoji:'💪',\t\n        genre:\"work-out\"\n    },\n    {\n        emoji:'🌎',\n        genre:\"world-music\"\n    }\n]\n\n//https://spreadsheets.google.com/feeds/list/1F_vrkHkT4VBLVUU4v-yqNTTNgtWc9sRX98V2wMkXQrU/od6/public/values?alt=json","import React from 'react';\n\nimport './EmojiPicker.css';\n\nimport { Emojis } from './Emojis';\n\nconst EmojiPicker = (props) => {\n\n    const handleClick = e => {\n        props.emojiChoice(e.target.className)\n    }\n\n    const emojiMap = Emojis.map(emoji => {\n        return <div className=\"emoji\" key={emoji.emoji}>\n                   <p className={emoji.genre} onClick={handleClick}>{emoji.emoji}</p>\n               </div>\n    })\n\n    return(\n        <div className=\"emoji-picker\">\n            <h3>select an emoji</h3>\n            <div className=\"emoji-area\">\n                {emojiMap}\n            </div>\n        </div>\n    )\n}\n\nexport default EmojiPicker;","import React from 'react';\nimport './Tracks.css';\n\nconst Tracks = (props) => {\n    \n    const trackMap = props.tracks.map(track => {\n        return <div key={track.id} className=\"track\">\n        <div className=\"track-artwork\">\n        <a href={track.external_urls.spotify}><img src={track.album.images[1].url} alt=\"album\" /></a>\n        </div>\n        <div className=\"track-datapoints\">\n            <p>artist</p>\n            <p>title</p>\n            <p>album</p>\n        </div>\n        <div className=\"track-info\">\n            <p><b>{track.artists[0].name}</b></p>\n            <p><a href={track.external_urls.spotify}>{track.name}</a></p>\n            <p>{track.album.name}</p>\n        </div>\n    </div>\n    })\n    \n    return(\n        <div className=\"Tracks\">\n            <h3>your music</h3>\n            <div className=\"music-area\">\n                {trackMap}\n            </div>\n        </div>\n    )\n}\n\nexport default Tracks;","import React from 'react';\n\nimport './Header.css'\n\nexport const Header = () => {\n    return (\n        <header>\n            <img src=\"https://www.pinclipart.com/picdir/big/52-529647_download-new-emoji-icons-transparent-background-sick-emoji.png\" alt=\"nauseous emoji\" /> \n            <h1>music-bot</h1>\n        </header>\n    )\n}\n\nexport default Header;","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport qs from 'qs';\n\nimport ColorPicker from './components/ColorPicker/ColorPicker';\nimport EmojiPicker from './components/EmojiPicker/EmojiPicker';\nimport Tracks from './components/Tracks/Tracks';\nimport Header from './components/Header/Header';\n\nfunction App() {\n\trequire('dotenv').config();\n\n\t//dotenv variables\n\tconst clientId = \"38c9b6bdc33543008b4d8e7686ef895f\";\n\tconst clientSecret = \"9106fd2b362e4a6490acd9339065e914\";\n\n\t// Set up states for retrieving access token and top tracks\n\tconst [token, setToken] = useState('')\n\tconst [tracks, setTracks] = useState([]);\n\n\t// State for choosing a color\n\tconst [color, setColor] = useState('');\n\n\t// State for choosing an emoji\n\tconst [emoji, setEmoji] = useState('');\n\n\t// variables for api call\n\tconst genre = emoji;\n\tconst tempo = color;\n\n\tconst getAuth = async () => {\n\t\taxios.get(`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=https%3A%2F%2Fsick-of-it.herokuapp.com%2F`).then(res =>{\n\t\t\tconsole.log(res);\n\t\t})\n\t}\n\n\tconst getToken = async () => {\n\t\t\n\t\tconst headers = {\n\t\t  headers: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t  },\n\t\t  auth: {\n\t\t\tusername: clientId,\n\t\t\tpassword: clientSecret,\n\t\t  },\n\t\t};\n\n\t\tconst data = {\n\t\t  grant_type: 'client_credentials',\n\t\t};\n\t  \n\t\ttry {\n\t\t  const response = await axios.post(\n\t\t\t'https://accounts.spotify.com/api/token',\n\t\t\tqs.stringify(data),\n\t\t\theaders\n\t\t  );\n\t\t  console.log(response.data.access_token);\n\t\t  setToken(response.data.access_token)\n\t\t  return response.data.access_token;\n\t\t} catch (error) {\n\t\t  console.log(error);\n\t\t}\n\t  };\n\n\tuseEffect(()=>{\n\t\t  \n\t\t  getAuth();\n\t\t  getToken();\n\n\t\t  const getTracks = () => {\n\t\t\t\taxios.get(`https://api.spotify.com/v1/recommendations?limit=12&market=US&seed_artists=4NHQUGzhtTLFvgF5SZesLK&seed_genres=${genre}&seed_tracks=0c6xIDDpzE81m2q797ordA&max_tempo=${tempo}`,{\n\t\t\t\t\t'method': 'GET',\n\t\t\t\t\t'headers': {\n\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t\t\t}\n\t\t\t\t}).then(trackResponse => {\n\t\t\t\t\tconsole.log(trackResponse.data.tracks);\n\t\t\t\t\tsetTracks(trackResponse.data.tracks);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t})\n\t\t\t}\t\n\n\t\t\tgetTracks();\n\t}, [emoji])\n// add emoji to above square brackets once API call is settled\n  const colorChoice = colorPick => {\n\tsetColor(colorPick);\n  }\n\n  const emojiChoice = emojiPick => {\n\tsetEmoji(emojiPick);\n  }\n\n  return (\n    <div className=\"App\">\n\t  <Header />\n      <ColorPicker color={color} colorChoice={colorChoice} />\n      <EmojiPicker emoji={emoji} emojiChoice={emojiChoice} />\n\t  {emoji \n\t\t? <Tracks tracks={tracks} />\n\t\t: null\n\t  }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}